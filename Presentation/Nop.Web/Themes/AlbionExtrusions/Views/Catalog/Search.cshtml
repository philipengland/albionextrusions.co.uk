@model SearchModel
@{
    Layout = "~/Views/Shared/_SiteLayout.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Search").Text);
}
@{
    //current category ID
    int currentCategoryId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("category", StringComparison.InvariantCultureIgnoreCase))
    {
        currentCategoryId = Convert.ToInt32(Url.RequestContext.RouteData.Values["categoryId"].ToString());
    }

    //current manufacturer ID
    int currentManufacturerId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("manufacturer", StringComparison.InvariantCultureIgnoreCase))
    {
        currentManufacturerId = Convert.ToInt32(Url.RequestContext.RouteData.Values["manufacturerId"].ToString());
    }


    //current product ID
    int currentProductId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("product", StringComparison.InvariantCultureIgnoreCase))
    {
        currentProductId = Convert.ToInt32(Url.RequestContext.RouteData.Values["productId"].ToString());
    }
}
@using Nop.Core;
@using Nop.Core.Infrastructure;
@using Nop.Web;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
 <div id="content" class="clearfix">
  <section id="primary-content" class="clearfix" role="main">
      <header class="clearfix">
                <h1><span>@T("Search")</span></h1>
              </header>

           @using (Html.BeginRouteForm("ProductSearch", FormMethod.Get))
           {
               <script type="text/javascript">
                   $(document).ready(function () {

                       $("#@Html.FieldIdFor(model => model.As)").click(toggleAdvancedSearch);

                       toggleAdvancedSearch();
                   });

                   function toggleAdvancedSearch() {

                       if ($('#@Html.FieldIdFor(model => model.As)').is(':checked')) {
                           $('#advanced-search-block').show();
                       }
                       else {
                           $('#advanced-search-block').hide();
                       }
                   }

                </script>
               
                <script type="text/javascript">
                    $(document).ready(function () {

                        $("#@Html.FieldIdFor(model => model.As)").click(toggleAdvancedSearch);

                        toggleAdvancedSearch();
                    });

                    function toggleAdvancedSearch() {

                        if ($('#@Html.FieldIdFor(model => model.As)').is(':checked')) {
                            $('#advanced-search-block').show();
                        }
                        else {
                            $('#advanced-search-block').hide();
                        }
                    }

                </script>

                <div id="search-results">
                  <ol>
                    <li>
                      <label>Search keyword(s):</label>
                      @Html.TextBoxFor(model => model.Q, new { @id = "keyword" })
                    </li>
                  </ol>
                  <div>
                    <ol>
                      <li>
                        <h2>Advanced search</h2>
                        @Html.CheckBoxFor(model => model.Sid, new { @id = "descriptions" })
                        <label>Search in product descriptions</label>
                        @Html.CheckBoxFor(model => model.As)@Html.CheckBoxFor(model => model.Sid)
                      </li>
                      @if (Model.AvailableCategories.Count > 0)
                      {
                                            <li>
                        <label>Category:</label>
                        @Html.DropDownListFor(model => model.Cid, Model.AvailableCategories, new { @id = "category" })
                      </li>
                      }
                      
                      <li>
                        <label>Price range:</label>
                        <label for="from">From:</label>
                        @Html.TextBoxFor(model => model.Pf, new { @id = "from" })
                        <label for="to">To:</label>
                        @Html.TextBoxFor(model => model.Pt, new { @id = "to" })
                      </li>
                    </ol>
                  </div>
                  <ol>
                    <li>
                      <input type="submit" name="submit" class="btn-alt search" value="Search" />
                    </li>
                  </ol>
              </div>

  
                        if (Model.NoResults)
                        {
                    <span class="result">
                        @T("Search.NoResultsText")
                    </span>
                        }
                        else
                        {
                        @*product list*@
                            if (Model.Products.Count > 0)
                            {
                                foreach (var product in Model.Products)
                                {
                            @Html.Partial("_ProductBox", product)
                                }
                            }
                        }
                <div class="clear">
                </div>
                  <ul class="pagination clearfix">
            @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber").BooleanParameterName("as").BooleanParameterName("isc").BooleanParameterName("sid")
          </ul>
           }

        @Html.Widget("categorydetails_bottom")
        
</section>
     
        @Html.Action("MiniShoppingCart", "ShoppingCart")
        @Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId })

</div>
